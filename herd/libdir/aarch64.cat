(*
 * The ARMv8 Application Level Memory Model.
 *
 * See section B2.3 of the ARMv8 ARM:
 *   https://developer.arm.com/docs/ddi0487/latest/arm-architecture-reference-manual-armv8-for-armv8-a-architecture-profile
 *
 * Copyright (C) 2016, ARM Ltd.
 *
 * Author: Will Deacon <will.deacon@arm.com>
 *)

"ARMv8 AArch64"

(*
 * Include the cos.cat file shipped with herd.
 * This builds the co relation as a total order over writes to the same
 * location and then consequently defines the fr relation using co and
 * rf.
 *)
include "cos.cat"

(*
 * Include aarch64fences.cat so that barriers show up in generated diagrams.
 *)
include "aarch64fences.cat"

(*
 * As a restriction of the model, all observers are limited to the same
 * inner-shareable domain. Consequently, the ISH, OSH and SY barrier
 * options are all equivalent to each other.
 *)
let dsb.full = DSB.ISH | DSB.OSH | DSB.SY
let dsb.ld = DSB.ISHLD | DSB.OSHLD | DSB.LD
let dsb.st = DSB.ISHST | DSB.OSHST | DSB.ST

(*
 * A further restriction is that standard litmus tests are unable to
 * distinguish between DMB and DSB instructions, so the model treats
 * them as equivalent to each other.
 *)
let dmb.full = DMB.ISH | DMB.OSH | DMB.SY | dsb.full
let dmb.ld = DMB.ISHLD | DMB.OSHLD | DMB.LD | dsb.ld
let dmb.st = DMB.ISHST | DMB.OSHST | DMB.ST | dsb.st

(* Flag any use of shareability options, due to the restrictions above. *)
flag ~empty (dmb.full | dmb.ld | dmb.st) \
	    (DMB.SY | DMB.LD | DMB.ST | DSB.SY | DSB.LD | DSB.ST)
	    as Assuming-common-inner-shareable-domain

(* Coherence-after *)
let ca = fr | co

(* Observed-by *)
let obs = rfe | fre | coe

(* Dependency-ordered-before *)
let dob = addr | data
	| ctrl; [W]
	| (ctrl | (addr; po)); [ISB]; po; [R]
	| addr; po; [W]
	| (ctrl | data); coi
	| (addr | data); rfi

(* Atomic-ordered-before *)
let aob = rmw
	| rmw; rfi

(* Barrier-ordered-before *)
let bob = po; [dmb.full]; po
	| [L]; po; [A]
	| [R]; po; [dmb.ld]; po
	| [A | Q]; po
	| [W]; po; [dmb.st]; po; [W]
	| po; [L]
	| po; [L]; coi

(* Ordered-before *)
let rec ob = obs
	| dob
	| aob
	| bob
	| ob; ob

(* Internal visibility requirement *)
acyclic po-loc | ca | rf as internal

(* External visibility requirement *)
irreflexive ob as external

(* Atomic: Basic LDXR/STXR constraint to forbid intervening writes. *)
empty rmw & (fre; coe) as atomic
